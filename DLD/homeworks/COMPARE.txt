module Compare (A, B, Y);
  output reg [5:0] Y;
  input [3:0] A, B;
  

  always @(A or B)
  
    if(A == B)
      Y = 6'b100011;
    else if(A > B)
      Y = 6'b011010;
    else if(A < B)
      Y = 6'b010101;
  
endmodule





3rd attempt
module Compare (A, B, Y);

output reg [5:0]Y;
input A,B;

always @(A or B)
	if(A==B) Y[5]=A; else Y[5]=B;
	if(A!=B) Y[4]=A; else Y[4]=B;
	if(A>B) Y[3]=A; else Y[3]=B;
	if(A<B) Y[2]=A; else Y[2]=B;
	if(A>=B) Y[1]=A; else Y[1]=B;
	if(A<=B) Y[0]=A; else Y[0]=B;
 

endmodule








2nd attempt
module Compare (A, B, Y);

output reg [5:0]Y;
input A,B;

always @(A or B)
	if(A==B) Y[5]=A; else Y[5]=B;
	if(A!=B) Y[4]=A; else Y[4]=B;
	if(A>B) Y[3]=A; else Y[3]=B;
	if(A<B) Y[2]=A; else Y[2]=B;
	if(A>=B) Y[1]=A; else Y[1]=B;
	if(A<=B) Y[0]=A; else Y[0]=B;
 

endmodule


a six-bit output Y[5:0].
Bit 5 of Y is for “equals,”
bit 4 for “not equal to,” 
bit 3 for “greater than,” 
bit 2 for “less than,” 
bit 1 for “greater than or equal,”
 bit 0 for “less than or equal to.

FIRST ATTEMPT:
module Compare (A, B, Y);

output reg [5:0]Y;
input A,B;

always @(A,B)
if(A<=B) Y=Y[0];
else if (A>=B) Y=Y[1];
else if (A<B) Y=Y[2];
else if (A>B) Y=Y[3];
else if (A!=B) Y=Y[4];
else Y=Y[5];

endmodule